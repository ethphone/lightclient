--
-- Copyright 2014, General Dynamics C4 Systems
--
-- This software may be distributed and modified according to the terms of
-- the GNU General Public License version 2. Note that NO WARRANTY is provided.
-- See "LICENSE_GPLv2.txt" for details.
--
-- @TAG(GD_GPL)
--
--
-- Copyright 2017, Data61
-- Commonwealth Scientific and Industrial Research Organisation (CSIRO)
-- ABN 41 687 119 230.
--
-- This software may be distributed and modified according to the terms of
-- the GNU General Public License version 2. Note that NO WARRANTY is provided.
-- See "LICENSE_GPLv2.txt" for details.
--
-- @TAG(DATA61_GPL)
--
-- Default base size: uint64_t
base 64(48,1)
-- Including the common structures_64.bf is neccessary because
-- we need the structures to be visible here when building
-- the capType
--
-- Copyright 2017, Data61
-- Commonwealth Scientific and Industrial Research Organisation (CSIRO)
-- ABN 41 687 119 230.
--
-- This software may be distributed and modified according to the terms of
-- the GNU General Public License version 2. Note that NO WARRANTY is provided.
-- See "LICENSE_GPLv2.txt" for details.
--
-- @TAG(DATA61_GPL)
--
block null_cap {
    padding 64
    field capType 5
    padding 59
}
block untyped_cap {
    field capFreeIndex 48
    padding 9
    field capIsDevice 1
    field capBlockSize 6
    field capType 5
    padding 11
    field_high capPtr 48
}
block endpoint_cap(capEPBadge, capCanGrantReply, capCanGrant, capCanSend,
                   capCanReceive, capEPPtr, capType) {
    field capEPBadge 64
    field capType 5
    field capCanGrantReply 1
    field capCanGrant 1
    field capCanReceive 1
    field capCanSend 1
    padding 7
    field_high capEPPtr 48
}
block notification_cap {
    field capNtfnBadge 64
    field capType 5
    field capNtfnCanReceive 1
    field capNtfnCanSend 1
    padding 9
    field_high capNtfnPtr 48
}
block reply_cap(capReplyCanGrant, capReplyMaster, capTCBPtr, capType) {
    field capTCBPtr 64
    field capType 5
    padding 57
    field capReplyCanGrant 1
    field capReplyMaster 1
}
-- The user-visible format of the data word is defined by cnode_capdata, below.
block cnode_cap(capCNodeRadix, capCNodeGuardSize, capCNodeGuard,
                capCNodePtr, capType) {
    field capCNodeGuard 64
    field capType 5
    field capCNodeGuardSize 6
    field capCNodeRadix 6
    field_high capCNodePtr 47
}
block thread_cap {
    padding 64
    field capType 5
    padding 11
    field_high capTCBPtr 48
}
block irq_control_cap {
    padding 64
    field capType 5
    padding 59
}
block irq_handler_cap {
    padding 52
    field capIRQ 12
    field capType 5
    padding 59
}
block zombie_cap {
    field capZombieID 64
    field capType 5
    padding 52
    field capZombieType 7
}
block domain_cap {
    padding 64
    field capType 5
    padding 59
}
---- Arch-independent object types
-- Endpoint: size = 16 bytes
block endpoint {
    field epQueue_head 64
    padding 16
    field_high epQueue_tail 46
    field state 2
}
-- Async endpoint: size = 32 bytes (64 bytes on mcs)
block notification {
    padding 16
    field_high ntfnBoundTCB 48
    field ntfnMsgIdentifier 64
    padding 16
    field_high ntfnQueue_head 48
    field_high ntfnQueue_tail 48
    padding 14
    field state 2
}
-- Mapping database (MDB) node: size = 16 bytes
block mdb_node {
    padding 16
    field_high mdbNext 46
    field mdbRevocable 1
    field mdbFirstBadged 1
    field mdbPrev 64
}
-- Thread state data
--
-- tsType
-- * Running
-- * Restart
-- * Inactive
-- * BlockedOnReceive
-- - Endpoint
-- - CanGrant
-- * BlockedOnSend
-- - Endpoint
-- - CanGrant
-- - CanGrantReply
-- - IsCall
-- - IPCBadge
-- - Fault
-- - seL4_FaultType
-- * CapFault
-- - Address
-- - InReceivePhase
-- - LookupFailure
-- - lufType
-- * InvalidRoot
-- * MissingCapability
-- - BitsLeft
-- * DepthMismatch
-- - BitsFound
-- - BitsLeft
-- * GuardMismatch
-- - GuardFound
-- - BitsLeft
-- - GuardSize
-- * VMFault
-- - Address
-- - FSR
-- - FaultType
-- * UnknownSyscall
-- - Number
-- * UserException
-- - Number
-- - Code
-- * BlockedOnReply
-- * BlockedOnFault
-- - Fault
-- * BlockedOnNotification
-- - Notification
-- * Idle
-- Lookup fault: size = 16 bytes
block invalid_root {
    padding 64
    padding 62
    field lufType 2
}
block missing_capability {
    padding 64
    padding 55
    field bitsLeft 7
    field lufType 2
}
block depth_mismatch {
    padding 64
    padding 48
    field bitsFound 7
    field bitsLeft 7
    field lufType 2
}
block guard_mismatch {
    field guardFound 64
    padding 48
    field bitsLeft 7
    field bitsFound 7
    field lufType 2
}
tagged_union lookup_fault lufType {
    tag invalid_root 0
    tag missing_capability 1
    tag depth_mismatch 2
    tag guard_mismatch 3
}
-- Fault: size = 16 bytes
block NullFault {
    padding 64
    padding 60
    field seL4_FaultType 4
}
block CapFault {
    field address 64
    field inReceivePhase 1
    padding 59
    field seL4_FaultType 4
}
block UnknownSyscall {
    field syscallNumber 64
    padding 60
    field seL4_FaultType 4
}
block UserException {
    padding 64
    field number 32
    field code 28
    field seL4_FaultType 4
}
-- Thread state: size = 24 bytes
block thread_state(blockingIPCBadge, blockingIPCCanGrant,
                   blockingIPCCanGrantReply, blockingIPCIsCall,
                   tcbQueued, blockingObject,
                   tsType) {
    field blockingIPCBadge 64
    padding 60
    field blockingIPCCanGrant 1
    field blockingIPCCanGrantReply 1
    field blockingIPCIsCall 1
    field tcbQueued 1
    padding 16
    field_high blockingObject 44
    field tsType 4
}
---- ARM-specific caps
block frame_cap {
    field capFMappedASID 16
    field_high capFBasePtr 48
    field capType 5
    field capFSize 2
    field_high capFMappedAddress 48
    field capFVMRights 2
    field capFIsDevice 1
    padding 6
}
-- Forth-level page table
block page_table_cap {
    field capPTMappedASID 16
    field_high capPTBasePtr 48
    field capType 5
    padding 10
    field capPTIsMapped 1
    field_high capPTMappedAddress 28
    padding 20
}
-- Third-level page table (page directory)
block page_directory_cap {
    field capPDMappedASID 16
    field_high capPDBasePtr 48
    field capType 5
    padding 10
    field capPDIsMapped 1
    field_high capPDMappedAddress 19
    padding 29
}
-- Second-level page table (page upper directory)
block page_upper_directory_cap {
    field capPUDMappedASID 16
    field_high capPUDBasePtr 48
    field capType 5
    field capPUDIsMapped 1
    field_high capPUDMappedAddress 10
    padding 48
}
-- First-level page table (page global directory)
block page_global_directory_cap {
    field capPGDMappedASID 16
    field_high capPGDBasePtr 48
    field capType 5
    field capPGDIsMapped 1
    padding 58
}
-- Cap to the table of 2^7 ASID pools
block asid_control_cap {
    padding 64
    field capType 5
    padding 59
}
-- Cap to a pool of 2^9 ASIDs
block asid_pool_cap {
    padding 64
    field capType 5
    field capASIDBase 16
    padding 6
    field_high capASIDPool 37
}
-- NB: odd numbers are arch caps (see isArchCap())
tagged_union cap capType {
    -- 5-bit tag caps
    tag null_cap 0
    tag untyped_cap 2
    tag endpoint_cap 4
    tag notification_cap 6
    tag reply_cap 8
    tag cnode_cap 10
    tag thread_cap 12
    tag irq_control_cap 14
    tag irq_handler_cap 16
    tag zombie_cap 18
    tag domain_cap 20
    -- 5-bit tag arch caps
    tag frame_cap 1
    tag page_table_cap 3
    tag page_directory_cap 5
    tag page_upper_directory_cap 7
    tag page_global_directory_cap 9
    tag asid_control_cap 11
    tag asid_pool_cap 13
}
---- Arch-independent object types
block VMFault {
    field address 64
    field FSR 32
    field instructionFault 1
    padding 27
    field seL4_FaultType 4
}
-- VM attributes
block vm_attributes {
    padding 61
    field armExecuteNever 1
    field armParityEnabled 1
    field armPageCacheable 1
}
---- ARM-specific object types
-- PGDE, PUDE, PDEs and PTEs, assuming 48-bit physical address
base 64(48,0)
-- hw_asids are required in hyp mode
block pgde_invalid {
    field stored_hw_asid 8
    field stored_asid_valid 1
    padding 53
    field pgde_type 2
}
block pgde_pud {
    padding 16
    field_high pud_base_address 36
    padding 10
    field pgde_type 2 -- must be 0b11
}
tagged_union pgde pgde_type {
    tag pgde_invalid 0
    tag pgde_pud 3
}
block pude_invalid {
    field stored_hw_asid 8
    field stored_asid_valid 1
    padding 53
    field pude_type 2
}
block pude_1g {
    padding 9
    field UXN 1
    padding 6
    field_high page_base_address 18
    padding 18
    field nG 1
    field AF 1
    field SH 2
    field AP 2
    padding 1
    field AttrIndx 3
    field pude_type 2
}
block pude_pd {
    padding 16
    field_high pd_base_address 36
    padding 10
    field pude_type 2
}
tagged_union pude pude_type {
    tag pude_invalid 0
    tag pude_1g 1
    tag pude_pd 3
}
block pde_large {
    padding 9
    field UXN 1
    padding 6
    field_high page_base_address 27
    padding 9
    field nG 1
    field AF 1
    field SH 2
    field AP 2
    padding 1
    field AttrIndx 3
    field pde_type 2
}
block pde_small {
    padding 16
    field_high pt_base_address 36
    padding 10
    field pde_type 2
}
tagged_union pde pde_type {
    tag pde_large 1
    tag pde_small 3
}
block pte {
    padding 9
    field UXN 1
    padding 6
    field_high page_base_address 36
    field nG 1
    field AF 1
    field SH 2
    field AP 2
    padding 1
    field AttrIndx 3
    field reserved 2 -- must be 0b11
}
block ttbr {
    field asid 16
    field_high base_address 48
}
--
-- Copyright 2017, Data61
-- Commonwealth Scientific and Industrial Research Organisation (CSIRO)
-- ABN 41 687 119 230.
--
-- This software may be distributed and modified according to the terms of
-- the BSD 2-Clause license. Note that NO WARRANTY is provided.
-- See "LICENSE_BSD2.txt" for details.
--
-- @TAG(DATA61_BSD)
--
-- this file contains types shared between libsel4 and the kernel
tagged_union seL4_Fault seL4_FaultType {
    -- generic faults
    tag NullFault 0
    tag CapFault 1
    tag UnknownSyscall 2
    tag UserException 3
    -- arch specific faults
    tag VMFault 5
}
